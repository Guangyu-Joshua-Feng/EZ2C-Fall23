target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  threading: false,
  cmake-include: ["i2cmaster.txt"]
}

preamble {=
  #include <stdio.h>
  #include <pico/stdlib.h>
  #include <hardware/gpio.h>
  #include <pico/binary_info.h>
  #include <hardware/i2c.h>

  #define ADDR 0x55
  #define i2c_default i2c0
  #define PICO_DEFAULT_I2C_SDA_PIN 4
  #define PICO_DEFAULT_I2C_SCL_PIN 5
=}

main reactor {
  timer t(0, 1000 ms)
  state led_on: bool = false

  reaction(startup) {=
    gpio_init(24);
    gpio_set_dir(24, GPIO_OUT);
    // gpio_put(3,true);
    gpio_init(PICO_DEFAULT_I2C_SDA_PIN);
    gpio_init(PICO_DEFAULT_I2C_SCL_PIN);
    i2c_init(i2c_default, 400 * 1000);
    gpio_set_function(PICO_DEFAULT_I2C_SDA_PIN, GPIO_FUNC_I2C);
    gpio_set_function(PICO_DEFAULT_I2C_SCL_PIN, GPIO_FUNC_I2C);
    gpio_pull_up(PICO_DEFAULT_I2C_SDA_PIN);
    gpio_pull_up(PICO_DEFAULT_I2C_SCL_PIN);
    // Make the I2C pins available to picotool
    bi_decl(bi_2pins_with_func(PICO_DEFAULT_I2C_SDA_PIN, PICO_DEFAULT_I2C_SCL_PIN, GPIO_FUNC_I2C));
  =}

  reaction(t) {=
    char c = 'a';
    int count;
    count = i2c_write_blocking(i2c_default, ADDR, &c, 1, false);
    self->led_on = !self->led_on;
    gpio_put(24, !self->led_on);
    printf("Count:%d.\n",count);
  =}
}
