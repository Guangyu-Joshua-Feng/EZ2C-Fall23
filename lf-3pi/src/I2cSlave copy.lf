target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  threading: false,
  cmake-include: ["i2cslave.txt"]
}

preamble {=
  #include <stdio.h>
  #include <pico/stdlib.h>
  #include <hardware/gpio.h>
  #include <pico/binary_info.h>
  #include <hardware/i2c.h>
  #include <pico/i2c_slave.h>

  #define ADDR 0x55
  #define i2c_default i2c0
  #define PICO_DEFAULT_I2C_SDA_PIN 4
  #define PICO_DEFAULT_I2C_SCL_PIN 5
=}

main reactor {

  preamble {=
  static bool blink;
  static void i2c_slave_handler (i2c_inst_t *i2c, i2c_slave_event_t event){
    switch (event){
      case I2C_SLAVE_RECEIVE:
      blink = true;
      case I2C_SLAVE_REQUEST:
      case I2C_SLAVE_FINISH:
      default: break;

    }
  }
  =}

  timer t(0, 250 ms)
  state led_on: bool = false

  reaction(startup) {=
    // LED Initialization
    gpio_init(PICO_DEFAULT_LED_PIN);
    gpio_set_dir(PICO_DEFAULT_LED_PIN, GPIO_OUT);

    // gpio_init(3);
    // gpio_set_dir(3, GPIO_OUT);
    // gpio_put(3,true);

    // I2C initialization
    i2c_init(i2c_default, 400 * 1000);
    i2c_set_slave_mode(i2c_default, true, ADDR);

    gpio_set_function(PICO_DEFAULT_I2C_SDA_PIN, GPIO_FUNC_I2C);
    gpio_set_function(PICO_DEFAULT_I2C_SCL_PIN, GPIO_FUNC_I2C);
    gpio_pull_up(PICO_DEFAULT_I2C_SDA_PIN);
    gpio_pull_up(PICO_DEFAULT_I2C_SCL_PIN);

    i2c_slave_init(i2c_default,ADDR,&i2c_slave_handler);

  =}


  // reaction(t) {=
  //   // if (c == 'h') {
  //   if (blink == true){
  //     self->led_on = !self->led_on;
  //     gpio_put(PICO_DEFAULT_LED_PIN, !self->led_on);
  //   }
  // =}
}
